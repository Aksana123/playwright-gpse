{"name": "test_save_scenario", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"span\").filter(has_text=\"Scenario has been\").locator(\"a\").nth(1)", "trace": "page = <Page url='https://stage.gpsenterprise.com/strategicplanning/client/prod_sandbox/dataset/3629/scenario/32107'>\n\n    @pytest.mark.regression\n    def test_save_scenario(page: Page) -> None:\n        management_page = ManagementPage(page)\n>       management_page.optimize_scenario()\n\nplanner_regression.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmanagement_page.py:83: in optimize_scenario\n    self.successful_optimization_popup.nth(1).click()\n..\\Selenium\\gpse-qa-automation\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:14851: in click\n    self._sync(\n..\\Selenium\\gpse-qa-automation\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:153: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n..\\Selenium\\gpse-qa-automation\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\Selenium\\gpse-qa-automation\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x00000215AC8D56A0>\ncb = <function Channel.send.<locals>.<lambda> at 0x00000215AC8D9440>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"span\").filter(has_text=\"Scenario has been\").locator(\"a\").nth(1)\n\n..\\Selenium\\gpse-qa-automation\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:513: TimeoutError"}, "start": 1713131272408, "stop": 1713131310012, "uuid": "5b6e9d1f-5fa5-41cb-8edd-94327c034947", "historyId": "5c440c3d71d12a9450cc810a90ad97ce", "testCaseId": "5c440c3d71d12a9450cc810a90ad97ce", "fullName": "planner_regression#test_save_scenario", "labels": [{"name": "tag", "value": "regression"}, {"name": "suite", "value": "planner_regression"}, {"name": "host", "value": "DALPC1018"}, {"name": "thread", "value": "31612-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "planner_regression"}]}